#!/usr/bin/env python3

# just a wrapper around turtlesim/srv/Spawn
from turtlesim.srv import Spawn, Kill
import rclpy
from rclpy.node import Node

rclpy.init()
node = Node('spawner')

def call(req):
    '''
    Calls with this request
    Detects the service
    '''
    if 'Spawn' in str(type(req)):
        client = node.create_client(Spawn, '/spawn')
    else:
        client = node.create_client(Kill, '/kill')
        
    client.wait_for_service()

    # call client, wait for response
    res = client.call_async(req)
    rclpy.spin_until_future_complete(node, res)
        
# declare arguments to be forwarded to spawn service
spawn_req = Spawn.Request()
spawn_req.x = node.declare_parameter("x", 0.).value
spawn_req.y = node.declare_parameter("y", 0.).value
spawn_req.theta = node.declare_parameter("theta", 0.).value
spawn_req.name = node.declare_parameter("name", 'turtle').value

# try to kill this turtle if here
kill_req = Kill.Request()
kill_req.name = spawn_req.name
call(kill_req)

# spawn this turtle
call(spawn_req)




    
